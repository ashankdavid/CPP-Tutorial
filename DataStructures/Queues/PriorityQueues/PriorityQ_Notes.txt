Introduction to Priority Queue-

    A priority queue is a type of queue that arranges elements based on their priority values. Elements with higher priority values are typically retrieved before elements with lower priority values.

    For example, if you add an element with a high priority value to a priority queue, it may be inserted near the front of the queue, while an element with a low priority value may be inserted near the back.

    There are several ways to implement a priority queue, including using an array, linked list, heap, or binary search tree.

    They are also used in algorithms to improve their efficiencies, such as Dijkstraâ€™s algorithm for finding the shortest path in a graph and the different search algorithm for pathfinding.

Properties of Priority Queue-

    1) Every item has a priority associated with it.
    2) An element with high priority is dequeued before an element with low priority.
    3) If two elements have the same priority, they are served according to their order in the queue.

Q) How is Priority assigned to the elements in a Priority Queue?

    In a priority queue, generally, the value of an element is considered for assigning the priority. 

Operations of a Priority Queue:

    1) Insertion in a Priority Queue
    2) Deletion in a Priority Queue  
    3) Peek in a Priority Queue

Types of Priority Queue:

    1) Ascending Order Priority Queue
    2) Descending order Priority Queue 

Difference between Priority Queue and Normal Queue?

    There is no priority attached to elements in a queue, the rule of first-in-first-out(FIFO) is implemented whereas, in a priority queue, the elements have a priority. The elements with higher priority are served first.

How to Implement Priority Queue? 
    Priority queue can be implemented using the following data structures: 

    1) Arrays
    2) Linked list
    3) Heap data structure
    4) Binary search tree


