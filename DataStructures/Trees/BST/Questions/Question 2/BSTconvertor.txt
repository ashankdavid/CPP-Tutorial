Question – Capgemini (2020), Oracle (2021), Techeon (2021), Accenture (2020,21,23), HCL Technologies (2023)

Problem Statement:
Converting a Binary Tree to a Binary Search Tree
You are given a binary tree where each node contains a distinct integer value. Your task is to write a C++ program that converts this binary tree into a Binary Search Tree (BST) while maintaining the original structure of the binary tree.
A Binary Search Tree is a binary tree where for each node:
1.	The left subtree of a node contains only nodes with values lesser than the node's value.
2.	The right subtree of a node contains only nodes with values greater than the node's value.

To convert the binary tree into a BST, you need to perform the following steps:
1.	Extract Values: Traverse the given binary tree in any order (e.g., inorder, preorder, or postorder) and store the values of all nodes in a list.
2.	Sort Values: Sort the list of extracted values.
3.	Rebuild BST: Construct a new BST using the sorted values. To build the BST:
•	Use a recursive approach where you pick the middle value from the sorted list as the root.
•	Recursively build the left subtree with values less than the middle value.
•	Recursively build the right subtree with values greater than the middle value.
